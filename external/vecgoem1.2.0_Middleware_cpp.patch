37a38
> #include "VecGeom/volumes/UnplacedEllipsoid.h"
593a595,596
>     } else if (name == "ellipsoid") {
>       return processEllipsoid(aDOMNode);
903a907,932
> }
> 
> const vecgeom::VECGEOM_IMPL_NAMESPACE::VUnplacedVolume *Middleware::processEllipsoid(
>     XERCES_CPP_NAMESPACE_QUALIFIER DOMNode const *aDOMNode)
> {
>   if (debug) {
>     std::cout << "Middleware::processEllipsoid: processing: " << Helper::GetNodeInformation(aDOMNode) << std::endl;
>   }
> 
>   auto const *const attributes = aDOMNode->getAttributes();
>   auto const lengthMultiplier  = GetLengthMultiplier(aDOMNode);
>   DECLAREANDGETLENGTVAR(ax)
>   DECLAREANDGETLENGTVAR(by)
>   DECLAREANDGETLENGTVAR(cz)
>   // DECLAREANDGETLENGTVAR(zcut1)
>   // DECLAREANDGETLENGTVAR(zcut2)
>   DECLAREHALF(ax)
>   DECLAREHALF(by)
>   DECLAREHALF(cz)
>   // DECLAREHALF(zcut1)
>   // DECLAREHALF(zcut2)
>   auto const anUnplacedEllipsoidPtr =
>       vecgeom::VECGEOM_IMPL_NAMESPACE::GeoManager::MakeInstance<vecgeom::VECGEOM_IMPL_NAMESPACE::UnplacedEllipsoid>(
>           halfax, halfby, halfcz);
>   return anUnplacedEllipsoidPtr;
> 
