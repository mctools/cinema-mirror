#!/bin/bash

USAGE="Usage: $0 [-t] [-d | -r] [-c]"

# Initialize variables
TESTFLAG=""
BUILDTYPE=""
CLEANFLAG=""

# Parse command-line options
while getopts "htdrc" option; do
  case "${option}" in
    h)
      echo "$USAGE"
      exit 0
      ;;
    t)
      TESTFLAG="test"
      ;;
    d)
      echo "Building cinema in debug mode"
      BUILDTYPE="Debug"
      ;;
    r)
      echo "Building cinema in release mode"
      BUILDTYPE="Release"
      ;;
    c)
      CLEANFLAG="clean"
      ;;
    *)
      echo "$USAGE"
      exit 1
      ;;
  esac
done

# Ensure CINEMAPATH is set
if [ -z "$CINEMAPATH" ]; then
  echo "Error: CINEMAPATH environment variable is not set."
  exit 1
fi

# Change to the build directory
cd "$CINEMAPATH/cinemabin" || { echo "Error: Could not change to directory $CINEMAPATH/cinemabin"; exit 1; }

# Clear the build if -c option is set
if [ "$CLEANFLAG" == "clean" ]; then
  echo "Cleaning the build directory"
  make clean
fi

# Run cmake with appropriate build type
if [ -z "$BUILDTYPE" ]; then
  cmake ..
else
  cmake -DCMAKE_BUILD_TYPE="$BUILDTYPE" -DCMAKE_CXX_FLAGS_DEBUG="-g -O0" -DCMAKE_C_FLAGS_DEBUG="-g -O0" ..
fi

# Build and optionally run tests
make -j

if [ "$TESTFLAG" == "test" ]; then
  # Calculate half of the available CPUs
  CPU_COUNT=$(nproc)
  TEST_CPU_COUNT=$((CPU_COUNT / 2))
  echo "Running tests with $TEST_CPU_COUNT CPUs"
  ctest -j"$TEST_CPU_COUNT"
else
  echo "Skipped unittest"
fi

# Return to the previous directory
cd - || exit 1
